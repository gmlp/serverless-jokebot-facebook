service: jokebot
provider:
  name: aws
  runtime: nodejs6.10

  stage: dev
  region: us-east-1

  environment:
    VERIFY_TOKEN: 'areallylongtoken'
    ACCESS_TOKEN: 'EAANk6KptjloBAJjaatqJPk7NGkBMlrwYEVqy1msPYeafAbJ3ZCE4iZBCW0lEMuytcJ9tKdtngVumxZBO0UB2GjBc5ECjIFdefAwnbOWBsKl7Qs9eOGj3UJR24GZCOATdC5Kpi790TD5zmcZCySKw4SVhbRKb3cHDZCoG6NZBhtJ8gZDZD'

functions:
  webhook:
    handler: handler.webhook
    events:
      - http:
          path: webhook
          method: GET
          integration: lambda
      - http:
          path: webhook
          method: POST
          integration: lambda


#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
